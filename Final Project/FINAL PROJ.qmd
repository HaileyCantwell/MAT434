---
title: "Data"
format: html
editor: visual
---

```{r}
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(tidymodels)
library(kableExtra)
library(patchwork)
library(ggridges)
library(marginaleffects)
library(tidytext)

options(kable_styling_bootstrap_options = c("hover", "striped"))
theme_set(theme_bw(base_size = 14))
```

```{r}

data <- read_csv("mental_health_and_technology_usage_2024.csv") %>% 
  janitor::clean_names()

unique_vals <- unique(data$mental_health_status)
print(unique_vals)

data <- data %>% 
  select(-c(user_id)) %>% 
  mutate(
    mental_health_status = factor(mental_health_status,
                                  levels = c("Poor", "Good", "Fair", "Excellent"),
                                  ordered = TRUE),
    stress_level = factor(stress_level)
  )

```

```{r}

set.seed(123)
data_splits <- initial_split(data, prop = 0.85, strata = social_media_usage_hours)
train <- training(data_splits)
temp <- testing(data_splits)

set.seed(456)
test_splits <- initial_split(temp, prop = .6)
validation <- training(test_splits)
test <- testing(test_splits)
```

## Statement of Purpose

The purpose of this analysis is to explore how daily technology usage, including screen time and social media engagement, impact mental health indicators such as stress levels, sleep quality, and overall mental wellness. This dataset aims to provide insight that may guide researchers and assist is forming healthier technology habits to improve well-being.

## Exploratory Data Analysis

```{r}
head(data) %>%
  kable() %>%
  kable_styling()
```

```{r}
train %>%
  ggplot() +
  geom_bar(aes(x = mental_health_status)) +
  labs(title = "Distribution of mental health status",
       x = "Mental health status",
       y = "Count")
```

```{r}
train %>%
  count(mental_health_status) %>%
  arrange(mental_health_status) %>%
  kable() %>%
  kable_styling()

train %>%
  count(stress_level) %>%
  arrange(stress_level) %>%
  kable() %>%
  kable_styling()
```

```{r}
train %>%
  select(where(is.numeric)) %>%
  summary() %>%
  kable() %>%
  kable_styling(full_width = FALSE, bootstrap_options = "hover", "striped")

```

```{r}

recipe_class <- recipe(mental_health_status ~ ., data = train) %>%
  step_normalize(all_numeric_predictors()) %>%
  step_dummy(all_nominal_predictors())

recipe_class %>%
  prep() %>%
  juice() %>%
  glimpse()
```

```{r}

multinom_spec <- multinom_reg() %>% 
  set_engine("nnet") %>% 
  set_mode("classification")


multinom_workflow <- workflow() %>% 
  add_recipe(recipe_class) %>% 
  add_model(multinom_spec)

multinom_fit <- multinom_workflow %>% 
  fit(data = train)


multinom_val_probs <- multinom_fit %>% 
  predict(validation, type = "prob") %>% 
  bind_cols(validation)

multinom_val_class <- multinom_fit %>% 
  predict(validation, type = "class") %>% 
  bind_cols(validation)


multinom_accuracy <- accuracy(multinom_val_class, truth = mental_health_status, estimate = .pred_class)
multinom_kap <- kap(multinom_val_class, truth = mental_health_status, estimate = .pred_class)
multinom_log_loss <- mn_log_loss(multinom_val_probs, truth = mental_health_status, starts_with(".pred_"))
multinom_metrics <- bind_rows(multinom_accuracy, multinom_kap, multinom_log_loss)
print(multinom_metrics)

```

```{r}
rf_spec <- rand_forest() %>% 
  set_engine("ranger") %>% 
  set_mode("classification")

rf_workflow <- workflow() %>% 
  add_recipe(recipe_class) %>% 
  add_model(rf_spec)

rf_fit <- rf_workflow %>% 
  fit(data = train)

rf_val_class <- rf_fit %>% 
  predict(validation, type = "class") %>% 
  bind_cols(validation)

rf_accuracy <- accuracy(rf_val_class, truth = mental_health_status, estimate = .pred_class)
rf_kap <- kap(rf_val_class, truth = mental_health_status, estimate = .pred_class)
rf_metrics <- bind_rows(rf_accuracy, rf_kap)
print(rf_metrics)


```
